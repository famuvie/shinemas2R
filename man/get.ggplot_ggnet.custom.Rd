% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/get.ggplot_ggnet.custom.R
\name{get.ggplot_ggnet.custom}
\alias{get.ggplot_ggnet.custom}
\title{Plot a network with ggplot2 based on GGally::ggnet}
\usage{
get.ggplot_ggnet.custom(net, mode = "fruchtermanreingold",
  layout.par = NULL, size = 12, alpha = 0.75, weight.method = "none",
  names = c("", ""), node.group = NULL, node.color = NULL,
  node.alpha = NULL, segment.alpha = NULL, segment.color = "grey",
  segment.label = NULL, segment.size = 0.25, arrow.size = 0,
  label.nodes = FALSE, label.size = size/2, top8.nodes = FALSE,
  trim.labels = TRUE, quantize.weights = FALSE, subset.threshold = 0,
  legend.position = "right", organise.sl = TRUE, ...)
}
\arguments{
\item{net}{an object of class \code{igraph} or \code{network}. If the object is of class \code{igraph}, the \link[intergraph:asNetwork]{intergraph} package is used to convert it to class \code{network}.}

\item{mode}{a placement method from the list of modes provided in the \link[sna:gplot.layout]{sna} package. Defaults to the Fruchterman-Reingold force-directed algorithm. If \code{mode} is set to \code{"geo"} and \code{net} contains two vertex attributes called \code{"lat"} and \code{"lon"}, these are used instead for geographic networks.}

\item{layout.par}{options to the placement method, as listed in \link[sna]{gplot.layout}.}

\item{size}{size of the network nodes. Defaults to 12. If the nodes are weighted, their area is
 proportionally scaled up to the size set by \code{size}.}

\item{alpha}{a level of transparency for nodes, vertices and arrows. Defaults to 0.75.}

\item{weight.method}{a weighting method for the nodes. Accepts \code{"indegree"}, \code{"outdegree"} or \code{"degree"} (the default). Set to \code{"none"} to plot unweighted nodes.}

\item{names}{a character vector of two elements to use as legend titles for the node groups and node weights. Defaults to empty strings.}

\item{node.group}{a vector of character strings to label the nodes with, of the same length and order as the vertex names. Factors are converted to strings prior to plotting.}

\item{node.color}{a vector of character strings to color the nodes with, holding as many colors as there are levels in \code{node.group}. Tries to default to \code{"Set1"} if missing.}

\item{node.alpha}{transparency of the nodes. Inherits from \code{alpha}.}

\item{segment.alpha}{transparency of the vertex links. Inherits from \code{alpha}.}

\item{segment.color}{color of the vertex links. Defaults to \code{"grey"}.}

\item{segment.label}{labels for the vertex links at mid-edges. Label size will be set to 1 / \code{segment.size}, and label alpha will inherit from \code{alpha}.}

\item{segment.size}{size of the vertex links, as a vector of values or as a single value. Defaults to 0.25.}

\item{arrow.size}{size of the vertex arrows for directed network plotting, in centimeters. Defaults to 0.}

\item{label.nodes}{label nodes with their vertex names attribute. If set to \code{TRUE}, all nodes are labelled. Also accepts a vector of character strings to match with vertex names.}

\item{top8.nodes}{use the top 8 nodes as node groups, colored with \code{"Set1"}. The rest of the network will be plotted as the ninth (grey) group. Experimental.}

\item{trim.labels}{removes '@', 'http://', 'www.' and the ending '/' from vertex names. Cleans up labels for website and Twitter networks. Defaults to \code{TRUE}.}

\item{quantize.weights}{break node weights to quartiles. Fails when quartiles do not uniquely identify nodes.}

\item{subset.threshold}{delete nodes prior to plotting, based on \code{weight.method} < \code{subset.threshold}. If \code{weight.method} is unspecified, total degree (Freeman's measure) is used. Defaults to 0 (no subsetting).}

\item{legend.position}{location of the captions for node colors and weights. Accepts all positions supported by ggplot2 themes. Defaults to "right".}

\item{...}{other arguments supplied to geom_text for the node labels. Arguments pertaining to the title or other items can be achieved through ggplot2 methods.}

\item{geo.outliers}{when \code{mode} is set to \code{"geo"}, trim geographic outliers (10% of most distant nodes). Defaults to \code{TRUE}.}
}
\description{
Plot a network with ggplot2 based on GGally::ggnet
}
\details{
ggnet.custom is based on GGally::gget and return two objects: the network and the matrix with the coordinates of each edge of the network.
This funtion, used in get.plot, is based on ggnet function from Gapply package coded by Moritz Marbach and Francois Briatte
for details see https://github.com/briatte/ggnet/blob/master/ggnet.R

The \code{weight.method} argument produces visually scaled nodes that are proportionally sized to their unweighted degree. To compute weighted centrality or degree measures, see Tore Opsahl's \code{tnet} package.
}
\examples{
net1 = get.data(query.type = "network", relation.on = "father-son", germplasm.in = "C21")

pnet1 = ggnet.custom(net1$network, size = 3, node.color = "red", segment.color = "black")
pnet1
}
\author{
Moritz Marbach and Francois Briatte for the core function. Pierre RiviÃ¨re for the little changes in the output.
}
\seealso{
\code{\link{get.plot}}
}

